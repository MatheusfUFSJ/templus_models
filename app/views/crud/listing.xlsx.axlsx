wb = xlsx_package.workbook
wb.add_worksheet(name: @crud_helper.title) do |sheet|
  header_fields = []
  @crud_helper.listing_fields.each do |att|
    if !att[:visible_if].nil?
      if (att[:visible_if].class == Proc && !att[:visible_if].call(att)) || (att[:visible_if].class != Proc && !att[:visible_if])
        next
      end
    end

    header_fields << I18n.t(att[:sf][:label])
  end
  sheet.add_row header_fields

  @records.each do |record|
    data_fields = []
    @crud_helper.listing_fields.each do |att|
      if record.send(att[:attribute]).present? or record.send(att[:attribute]).to_s == "false"
        if @model.columns_hash[att[:attribute].to_s].present? && [:date, :datetime].include?(@model.columns_hash[att[:attribute].to_s].type)
          if att[:date_format].present?
            data_fields << record.send(att[:attribute]).strftime(att[:date_format])
          else
            data_fields << l(record.send(att[:attribute]))
          end
        elsif array?(record, att[:attribute]) || (association?(@model, att[:attribute]) && !belongs_to_association?(@model, att[:attribute]) && !has_one_association?(@model, att[:attribute]))
          data_fields << record.send(att[:attribute]).map{|rec| rec.to_s}.join(",")
        elsif boolean?(record, att[:attribute])
          data_fields << I18n.t(record.send(att[:attribute]) ? "shared.sim" : "shared.nao")
        elsif possui_url?(record, att[:attribute])
          data_fields << record.send(att[:attribute]).url
        elsif att[:sf][:label_method].present?
          data_fields << record.send(att[:attribute]).send(att[:sf][:label_method]).to_s
        else
          data_fields << record.send(att[:attribute]).to_s
        end
      else
        data_fields << ''
      end
    end
    sheet.add_row data_fields
  end
end